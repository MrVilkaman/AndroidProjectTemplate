
group = 'com.github.MrVilkaman'
version = '1.0'

apply plugin: 'com.android.library'
//apply from: '../jacoco.gradle'
apply from: "$project.rootDir/tools/tools.gradle"
//apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.github.dcendents.android-maven'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5' // Add this linz
    }
}

android {
    defaultPublishConfig "release"
    publishNonDefault true

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            if (project.hasProperty("mytestCoverageEnabled")) {
                testCoverageEnabled = mytestCoverageEnabled
            }
            ext.enableCrashlytics = false
            testCoverageEnabled true
        }
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
    }


    packagingOptions {
        exclude 'LICENSE.txt' // multiple libs have this file -> cause build error
    }

    lintOptions {
        disable 'InvalidPackage' // AssertJ references java.nio package, which is not available on Android
    }

    sourceSets {
        // Integration tests live in src/integrationTest.
        test.java.srcDir 'src/integrationTests/java'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}



configurations.all {
    exclude group: 'io.reactivex', module: 'rxjava'
    resolutionStrategy {
        // Force our version of support-annotations, we have a conflict between app and androidTest dependency resolution.
        force libraries.supportAnnotations
        force libraries.supportAppCompat
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')

    api libraries.dagger
    api 'com.google.dagger:dagger-android:2.11'
    api 'com.google.dagger:dagger-android-support:2.11'

    compileOnly 'ru.terrakok.cicerone:cicerone:2.1.0'

    annotationProcessor libraries.daggerCompiler
    api libraries.supportAnnotations
    api libraries.supportAppCompat
    api libraries.supportRecyclerView
    compileOnly libraries.supportDesign

    api libraries.retrofit2
    api libraries.retrofit2rxjava2

    // Developer tools (Developer Settings)

    api libraries.rxJava2
    api libraries.rxpermissions2
    api libraries.rxAndroid2

    api libraries.materialDialog
    api libraries.materialProgress

    api libraries.simplecropview
    api libraries.picasso
    api libraries.picassoOkhttp
    api libraries.okHttp3
    api libraries.okHttpLoggingInterceptor

    compileOnly libraries.playServicesGcm

    testImplementation libraries.retrofit2
    testImplementation libraries.retrofit2rxjava2

    //tests
    testImplementation project(':testutils')

}
